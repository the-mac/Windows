

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class ZipCodes : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ZipCodes entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ZipCodes()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ZipCodes(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ZipCodes> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ZipCodes.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCodes_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCodes_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ZipCode
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.ZipCode);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.ZipCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Latitude
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Latitude);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Latitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Latitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Latitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Latitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Longitude
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Longitude);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Longitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Longitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Longitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Longitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.State);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string County
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.County);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.County, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void County_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void County_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void County_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.ZipCodes.DetailsClass.GetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.ZipCodes.DetailsClass.SetValue(this, global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ZipCodes,
                global::LightSwitchApplication.ZipCodes.DetailsClass,
                global::LightSwitchApplication.ZipCodes.DetailsClass.IImplementation,
                global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass>.Entry
                __ZipCodesEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass>.Entry(
                    global::LightSwitchApplication.ZipCodes.DetailsClass.__ZipCodes_CreateNew,
                    global::LightSwitchApplication.ZipCodes.DetailsClass.__ZipCodes_Created,
                    global::LightSwitchApplication.ZipCodes.DetailsClass.__ZipCodes_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ZipCodes __ZipCodes_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ZipCodes> es)
            {
                return new global::LightSwitchApplication.ZipCodes(es);
            }
            private static void __ZipCodes_Created(global::LightSwitchApplication.ZipCodes e)
            {
                e.ZipCodes_Created();
            }
            private static bool __ZipCodes_AllowSaveWithErrors(global::LightSwitchApplication.ZipCodes e)
            {
                bool result = false;
                e.ZipCodes_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> ZipCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.ZipCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> Latitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Latitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> Longitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Longitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> County
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.County) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string ZipCode { get; set; }
                new string Latitude { get; set; }
                new string Longitude { get; set; }
                new string City { get; set; }
                new string State { get; set; }
                new string County { get; set; }
                new string Type { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, int>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    ZipCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "ZipCode",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._ZipCode_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._ZipCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._ZipCode_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._ZipCode_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._ZipCode_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._ZipCode_OnValueChanged);
                private static void _ZipCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._ZipCode, sf);
                }
                private static bool _ZipCode_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.ZipCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ZipCode_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ZipCode_Validate(r);
                }
                private static string _ZipCode_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.ZipCode;
                }
                private static void _ZipCode_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ZipCode = v;
                }
                private static void _ZipCode_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.ZipCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    Latitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "Latitude",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Latitude_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Latitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Latitude_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Latitude_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Latitude_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Latitude_OnValueChanged);
                private static void _Latitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._Latitude, sf);
                }
                private static bool _Latitude_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.Latitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Latitude_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Latitude_Validate(r);
                }
                private static string _Latitude_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.Latitude;
                }
                private static void _Latitude_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Latitude = v;
                }
                private static void _Latitude_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.Latitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    Longitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "Longitude",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Longitude_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Longitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Longitude_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Longitude_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Longitude_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Longitude_OnValueChanged);
                private static void _Longitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._Longitude, sf);
                }
                private static bool _Longitude_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.Longitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Longitude_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Longitude_Validate(r);
                }
                private static string _Longitude_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.Longitude;
                }
                private static void _Longitude_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Longitude = v;
                }
                private static void _Longitude_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.Longitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._State_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._State_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._State_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._State_OnValueChanged);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static bool _State_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.State_IsReadOnly(ref result);
                    return result;
                }
                private static void _State_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.State;
                }
                private static void _State_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.State = v;
                }
                private static void _State_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    County = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "County",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._County_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._County_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._County_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._County_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._County_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._County_OnValueChanged);
                private static void _County_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._County, sf);
                }
                private static bool _County_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.County_IsReadOnly(ref result);
                    return result;
                }
                private static void _County_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.County_Validate(r);
                }
                private static string _County_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.County;
                }
                private static void _County_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.County = v;
                }
                private static void _County_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.County_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.ZipCodes.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ZipCodes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data> c, global::LightSwitchApplication.ZipCodes.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.ZipCodes e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.ZipCodes e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.ZipCodes.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.ZipCodes e)
                {
                    e.Type_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _ZipCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _Latitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _Longitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _County;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ZipCodes, global::LightSwitchApplication.ZipCodes.DetailsClass, string>.Data _Type;
            
        }
    
        #endregion
    }
    
    #endregion
}
