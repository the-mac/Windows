<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Reason_text.Text" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="Settings_ApiUrl.Text" xml:space="preserve">
    <value>Server url</value>
  </data>
  <data name="Settings_AuthUrl.Text" xml:space="preserve">
    <value>Authentication url</value>
  </data>
  <data name="Settings_Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Settings_ConfigurationTitle.Text" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Settings_Save.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Settings_SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="TestModeCheck.Content" xml:space="preserve">
    <value>Test mode enabled</value>
  </data>
  <data name="Visits_OtherVisits" xml:space="preserve">
    <value>Other visits ({0})</value>
  </data>
  <data name="Visits_Today" xml:space="preserve">
    <value>Today visits ({0})</value>
  </data>
  <data name="Visit_To.Text" xml:space="preserve">
    <value>Visit to</value>
  </data>
  <data name="Date.Text" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="Reason.Text" xml:space="preserve">
    <value>Reason:</value>
  </data>
  <data name="Time.Text" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="Vehicle.Text" xml:space="preserve">
    <value>Vehicle:</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Plate.Text" xml:space="preserve">
    <value>License plate:</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Visits_Info.Text" xml:space="preserve">
    <value>Visit info</value>
  </data>
  <data name="Visits.Text" xml:space="preserve">
    <value>Visits</value>
  </data>
  <data name="ElementNotFound" xml:space="preserve">
    <value>The element hasn't been found.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="New_Visitor.Text" xml:space="preserve">
    <value>Create a new visitor</value>
  </data>
  <data name="New_Visit.Text" xml:space="preserve">
    <value>Create a new visit</value>
  </data>
  <data name="NewVisit_Info.Text" xml:space="preserve">
    <value>Select a visitor and an employee</value>
  </data>
  <data name="Worker_Name_Visited.Text" xml:space="preserve">
    <value>Employee:</value>
  </data>
  <data name="Time_2.Text" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Date_2.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Vehicle_2.Text" xml:space="preserve">
    <value>Vehicle</value>
  </data>
  <data name="ErrorOcurred" xml:space="preserve">
    <value>Can't connect with the service</value>
  </data>
  <data name="Visitor_Search.Text" xml:space="preserve">
    <value>Visitor search</value>
  </data>
  <data name="Employee_Search.Text" xml:space="preserve">
    <value>Employee search</value>
  </data>
  <data name="Last_Visit.Text" xml:space="preserve">
    <value>Last visit:</value>
  </data>
  <data name="No_Visit" xml:space="preserve">
    <value>No visits</value>
  </data>
  <data name="Email.Text" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="Plate_2.Text" xml:space="preserve">
    <value>Lic. plate</value>
  </data>
  <data name="GoFullScreen.Text" xml:space="preserve">
    <value>Go to full screen mode to edit.</value>
  </data>
  <data name="Visit_To_2.Text" xml:space="preserve">
    <value>Visit to:</value>
  </data>
  <data name="Employee_2.Text" xml:space="preserve">
    <value>Employee:</value>
  </data>
  <data name="Add_Employee.Text" xml:space="preserve">
    <value>Add an employee</value>
  </data>
  <data name="Add_Visitor.Text" xml:space="preserve">
    <value>Add a visitor</value>
  </data>
  <data name="RequiredVisitorEmployee" xml:space="preserve">
    <value>A visitor and an employee are required.</value>
  </data>
  <data name="Incomplete_Form" xml:space="preserve">
    <value>The visit is incomplete</value>
  </data>
  <data name="Visit_Added" xml:space="preserve">
    <value>Visit added</value>
  </data>
  <data name="Visit_Added_Desc" xml:space="preserve">
    <value>The new visit has been added succesfully.</value>
  </data>
  <data name="Visitor_Info.Text" xml:space="preserve">
    <value>Visitor information</value>
  </data>
  <data name="Company.Text" xml:space="preserve">
    <value>Organization/Company</value>
  </data>
  <data name="Email_2.Text" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FirstName.Text" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="ID.Text" xml:space="preserve">
    <value>ID number</value>
  </data>
  <data name="LastName.Text" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Prof_Title.Text" xml:space="preserve">
    <value>Professional title</value>
  </data>
  <data name="Add_Image" xml:space="preserve">
    <value>Add an image</value>
  </data>
  <data name="Field_Required.Text" xml:space="preserve">
    <value>This field is required.</value>
  </data>
  <data name="Email_NotValid.Text" xml:space="preserve">
    <value>Enter a valid email.</value>
  </data>
  <data name="Crop_Image.Text" xml:space="preserve">
    <value>Crop the small picture</value>
  </data>
  <data name="NoVisits" xml:space="preserve">
    <value>There are no visits.</value>
  </data>
  <data name="Visit_Pinned_2" xml:space="preserve">
    <value>Visit pinned:</value>
  </data>
  <data name="Employees.Text" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="Visitors.Text" xml:space="preserve">
    <value>Visitors</value>
  </data>
  <data name="Visitor_2.Text" xml:space="preserve">
    <value>Visitor:</value>
  </data>
  <data name="SearchEmployee_Info.Text" xml:space="preserve">
    <value>Select an employee</value>
  </data>
  <data name="SearchVisitor_Info.Text" xml:space="preserve">
    <value>Select a visitor</value>
  </data>
  <data name="RequiredEmployee" xml:space="preserve">
    <value>An employee is required.</value>
  </data>
  <data name="RequiredVisitor" xml:space="preserve">
    <value>A visitor is required.</value>
  </data>
  <data name="ChangeImage" xml:space="preserve">
    <value>Change image</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Visitors</value>
  </data>
  <data name="IncorrectTime" xml:space="preserve">
    <value>Incorrect time.</value>
  </data>
  <data name="TimeBad" xml:space="preserve">
    <value>Please, make sure that the time selected does not belong to the past.</value>
  </data>
  <data name="SearchEmployee_Box.PlaceholderText" xml:space="preserve">
    <value>Search an employee...</value>
  </data>
  <data name="SearchVisitor_Box.PlaceholderText" xml:space="preserve">
    <value>Search a visitor...</value>
  </data>
  <data name="Visits_Next" xml:space="preserve">
    <value>Next visit</value>
  </data>
</root>