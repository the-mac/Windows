<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=8"/>
    <title>HTML5 Sample</title>
    <link type="text/css" href="http://ajax.microsoft.com/ajax/jquery.ui/1.8.5/themes/redmond/jquery-ui.css" rel="stylesheet" />
    <link type="text/css" href="css/ListSample.css" rel="stylesheet" />	
    <script type="text/javascript" src="http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js"></script>
    <script type="text/javascript" src="http://ajax.microsoft.com/ajax/jquery.ui/1.8.5/jquery-ui.min.js"></script>
    <script type="text/javascript" src="js/DebugLog.js"></script>
    <script type="text/javascript" src="js/WebStorage.js"></script>
    <script type="text/javascript" src="js/SyncFormatter.js"></script>
    <script type="text/javascript" src="js/SyncController.js"></script>
    <script type="text/javascript" src="js/UserLogin.js"></script>
    <script type="text/javascript" src="js/ListSample.js"></script>
    <script type="text/javascript">
        // Initialize sync related options
        //  storage:            The offline storage class used by sync controller and UI
        //  loginUri:           The URI to get user identity
        //  downloadServiceUri: The URI to download change
        //  uploadServiceUri:   The URI to update change
        //
        // In order to initialize WebStorage, schema of offline cache is required so that
        // we can identify key fields (needed by tombstone) and perform cascade update or
        // delete when necessary. A schema object is composed of multiple entity schema
        // objects. Each entity schema object is composed of multiple field schema object.
        // For each field, the following information is needed:
        //  - Whether it's a key field
        //  - Cascade update/delete information
        //      - Whether cascade update is needed
        //      - Whether cascade delete is needed
        //      - List of cascade targets (type/field pair)
        InitSyncOption({
            storage: new WebStorage({
                "DefaultScope.Item": {
                    ID: { key: true, cascade: { "update": true, "delete": true, "target": {"DefaultScope.TagItemMapping": "ItemID"}} },
                    ListID: { key: true },
                    UserID: { key: true },
                    Name: {},
                    Description: {},
                    Priority: {},
                    Status: {},
                    StartDate: {},
                    EndDate: {}
                },
                "DefaultScope.List": {
                    ID: { key: true, cascade: { "update": true, "delete": true, "target": {"DefaultScope.Item": "ListID"}} },
                    UserID: { key: true },
                    Name: {},
                    Description: {},
                    CreatedDate: {}
                },
                "DefaultScope.Priority": {
                    ID: { key: true, cascade: { "update": true, "delete": false, "target": {"DefaultScope.Item": "Priority"}} },
                    Name: {}
                },
                "DefaultScope.Status": {
                    ID: { key: true, cascade: { "update": true, "delete": false, "target": {"DefaultScope.Item": "Status"}} },
                    Name: {}
                },
                "DefaultScope.Tag": {
                    ID: { key: true, cascade: { "update": true, "delete": true, "target": {"DefaultScope.TagItemMapping": "TagID"}} },
                    Name: {}
                },
                "DefaultScope.TagItemMapping": {
                    ItemID: { key: true },
                    TagID: { key: true },
                    UserID: { key: true }
                },
                "DefaultScope.User": {
                    ID: { key: true, cascade: { "update": true, "delete": true, "target": {"DefaultScope.List": "UserID", "DefaultScope.Item": "UserID", "DefaultScope.TagItemMapping": "UserID"}} },
                    Name: {}
                }
            }),
            loginUri: "/Login.ashx?username=",
            downloadServiceUri: "/DefaultScopeSyncService.svc/defaultscope/DownloadChanges?userid=",
            uploadServiceUri: "/DefaultScopeSyncService.svc/defaultscope/UploadChanges?userid="
        });
    </script>
</head>
<body>
<div class="content">
    <table class="header normal ui-widget-header">
        <tr>
            <td><div>List Sample - Web Storage</div></td>
            <td class="buttons"><button id="btnSync" class="small">Sync</button>&nbsp;<button id="btnSwitch" class="small">Switch User</button>&nbsp;<button id="btnClear" class="small">Clear Local</button></td>
        </tr>
    </table>
    <form  class="properties" id="frmLogin" title="User Login" action="#">
        <label for="user">User:</label>
        <input type="text" name="user" id="user" class="text editbox ui-widget-content ui-corner-all" />
    </form>
    <form  class="properties" id="frmList" title="List Properties" action="#">
        <label for="list-name">Name:</label>
        <input type="text" name="list-name" id="list-name" class="text editbox ui-widget-content ui-corner-all" /><br />
        <label for="list-description">Description:</label>
        <input type="text" name="list-description" id="list-description" class="text editbox ui-widget-content ui-corner-all" /><br />
        <label for="list-createddate">Created Date:</label>
        <input type="text" readonly="readonly" name="list-createddate" id="list-createddate" class="text editbox ui-widget-content ui-corner-all" /><br />
    </form>
    <form  class="properties" id="frmItem" title="Item Properties" action="#">
        <label for="item-name">Name:</label>
        <input type="text" name="item-name" id="item-name" class="text editbox ui-widget-content ui-corner-all" /><br />
        <label for="item-description">Description:</label>
        <input type="text" name="item-description" id="item-description" class="text editbox ui-widget-content ui-corner-all" /><br />
        <label for="item-priority">Priority:</label>
        <select name="item-priority" id="item-priority" class="text editbox ui-widget-content ui-corner-all"></select><br />
        <label for="item-status">Status:</label>
        <select name="item-status" id="item-status" class="text editbox ui-widget-content ui-corner-all"></select><br />
        <label for="item-startdate">Start Date:</label>
        <input type="text" name="item-startdate" id="item-startdate" class="text editbox ui-widget-content ui-corner-all" /><br />
        <label for="item-enddate">End Date:</label>
        <input type="text" name="item-enddate" id="item-enddate" class="text editbox ui-widget-content ui-corner-all" /><br />
    </form>
    <div id="divDelete" title="Confirmation">
        <p>Are you going to delete it?</p>
    </div>
    <br />
    <div id="divList">
	    <ul>
		    <li><a href="#tabs-add">+</a></li>
	    </ul>
	    <div id="tabs-add"><button id="btnAddList">Add List</button></div>
    </div>
    <br />
    <div id="divDebug">
	    <ul>
		    <li><a href="#tabs-debug">Debug Output</a></li>
		    <li><a href="#tabs-storage">Local Storage</a></li>
	    </ul>
	    <div id="tabs-debug"></div>
	    <div id="tabs-storage"><button id="btnDumpStorage">Refresh</button><div id="divStorage"></div></div>
    </div>
</div>
</body>
</html>
